<?xml version="1.0" encoding="UTF-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:clue-components="clue.components.*" width="100%" height="100%"
	creationComplete="initApp();">
	<s:states>
		<s:State name="login" />
		<s:State name="games" />
		<s:State name="prestart" stateGroups="clueGroup" />
		<s:State name="clue" stateGroups="clueGroup" />
		<s:State name="accuse" stateGroups="clueGroup" />
		<s:State name="suggest" stateGroups="clueGroup" />
		<s:State name="disprove" stateGroups="clueGroup" />
	</s:states>
	<s:transitions>
		<s:Transition fromState="*" toState="*">
			<s:Parallel>
				<s:Resize targets="{[beforeStartRect]}" duration="1000" />
				<s:Move
					targets="{[beforeStartRect,beforeStartRectContainer,beforeStartContainer]}"
					duration="1000" />
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	<fx:Script>
	<![CDATA[
		import mx.rpc.remoting.mxml.RemoteObject;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.events.FaultEvent;
		import mx.messaging.events.MessageFaultEvent;
		import mx.messaging.events.MessageEvent;
		import messages.*;
		import clue.components.*;
		import clue.*;
	
		private var key:String;
		private var username:String;
		private var suspect:String;
		private var gameId:int;
		[Bindable]private var playerCount:int=0;
		[ArrayElementType("clue.components.Player")] [Bindable]private var currentPlayers:Array=new Array();
		//Handlers
		private function defaultServiceResultHandler(event:ResultEvent):void{}
		private function defaultServiceFaultHandler(event:FaultEvent):void{}
		private function defaultMessageFaultHandler(event:MessageFaultEvent):void{}
		
		private function logout():void{key=null;username=null;currentState="login";playerCount=0;chat.text=chatInput.text="";clueConsumer.unsubscribe();}
		private function successfulLogin(usernamein:String, keyin:String):void{username=usernamein;key=keyin;currentState="games";}
		private function join(suspectin:String,gameIdIn:int):void{gameId=gameIdIn;suspect=suspectin;blazeDSClueService.join(key,gameId,suspect);}
		private function rejoin(gameIdIn:int):void{gameId=gameIdIn;blazeDSClueService.associate(key,gameIdIn);}
		private function rejoinSuccess(event:ResultEvent):void{suspect=event.result as String;joinSuccess(event);}
		private function joinSuccess(event:ResultEvent):void{
			currentState="prestart";
			clueConsumer.subscribe();
			blazeDSClueService.getStatus(gameId);
			playerCount=playerCount+1;
		}
		private function onGetStatus(event:ResultEvent):void{
			var gameData:GameData = event.result as GameData;
			currentPlayers=gameData.players;
		}
		
		private function onClueMessage(event:MessageEvent):void{
			chat.text+=event.message+"\n";
			if (event.message.body is messages.Join){chat.text+="was a join.\n";playerCount=playerCount+1}
			else if (event.message.body is messages.Chat){chat.text+="was a chat.\n";}
		}
				
		private function initApp():void{
			ExternalInterface.addCallback("successfulLogin",successfulLogin);
			ExternalInterface.addCallback("logout",logout);
			ExternalInterface.addCallback("join",join);
			ExternalInterface.addCallback("rejoin",rejoin);
			ExternalInterface.call("clueFinishedLoading");
		}	
	]]>
	</fx:Script>
	<fx:Declarations>
		<mx:RemoteObject id="blazeDSClueService" destination="BlazeDSClueService"
			result="defaultServiceResultHandler(event);" fault="defaultServiceFaultHandler(event);">
			<mx:method name="join" result="joinSuccess(event);" />
			<mx:method name="associate" result="rejoinSuccess(event);" />
			<mx:method name="getStatus" result="onGetStatus(event);" />
		</mx:RemoteObject>
		<mx:Consumer id="clueConsumer" destination="clue-jms-destination"
			message="onClueMessage(event);" fault="defaultMessageFaultHandler(event);" />
	</fx:Declarations>
	<!-- Telling someone to pick a game -->
	<!-- Main scene container. -->
	<s:VGroup width="100%" height="100%" includeIn="clueGroup"
		enabled.prestart="false">
		<s:filters>
			<s:ColorMatrixFilter
				matrix="[1,0,0,0,-50,
					  	 0,1,0,0,-50,
					  	 0,0,1,0,-50,
					  	 0,0,0,1,0]"
				includeIn="prestart" />
			<s:BlurFilter blurX="10" blurY="10" includeIn="prestart" />
		</s:filters>
		<!-- Cards and rooms. -->
		<s:HGroup width="100%" height="100%">
			<s:Panel id="cardsPanel" title="Cards" height="100%">
				<s:Scroller height="100%" width="100%">
					<s:VGroup id="cards" height="100%" width="100%"
						horizontalAlign="center" paddingLeft="10" paddingRight="10"
						paddingTop="10" paddingBottom="10">
						<clue-components:Card face="test" width="100%"
							skinClass="clue.components.CardSkin" />
					</s:VGroup>
				</s:Scroller>
			</s:Panel>
			<clue-components:Board skinClass="clue.components.BoardSkin"
				width="100%" height="100%" suspects="{currentPlayers}" />
		</s:HGroup>
		<s:HGroup width="100%">
			<s:Panel id="chatPanel" title="Chat" width="100%" height="100%">
				<s:layout>
					<s:VerticalLayout paddingLeft="10" paddingRight="10"
						paddingTop="10" paddingBottom="10" />
				</s:layout>
				<s:TextArea id="chat" width="100%" />
				<s:HGroup width="100%">
					<s:TextInput id="chatInput" width="100%" height="40"
						fontSize="32" />
					<mx:Button width="40" height="40" label="Chat"
						icon="@Embed(source='../resources/speech_icon.png')"
						click="blazeDSClueService.chat(key,gameId,chatInput.text);chatInput.text='';" />
				</s:HGroup>
			</s:Panel>
			<s:VGroup height="100%">
				<s:Button label="Suggest" fontSize="20" width="100%"
					height="100%" />
				<s:Button label="Accuse" fontSize="20" width="100%" height="100%" />
			</s:VGroup>
		</s:HGroup>
	</s:VGroup>
	<!-- Telling someone to login -->
	<s:Group id="beforeStartContainer" includeIn="login,games,prestart"
		width="100%" height="100%">
		<s:filters>
			<s:DropShadowFilter />
		</s:filters>
		<s:Group id="beforeStartRectContainer" verticalCenter="0"
			horizontalCenter="0">
			<s:Rect id="beforeStartRect" radiusX="10" radiusY="10" width="100%"
				height="100%">
				<s:fill>
					<s:SolidColor color="#dddddd" />
				</s:fill>
				<s:stroke>
					<s:SolidColorStroke color="#bbbbbb" weight="10" />
				</s:stroke>
			</s:Rect>
			<s:VGroup paddingLeft="50" paddingRight="50" paddingTop="50"
				paddingBottom="50" width="100%" horizontalAlign="center">
				<s:Label id="beforeStartText" text.login="Please login before continuing."
					text.games="Please select a game to join."
					text.prestart="Once you have enough players, click the Start button below to start the game. ({playerCount}/3 players)." />
				<s:Button label="Start" includeIn="prestart" click="currentState='clue';"
					id="btnStart" />
			</s:VGroup>
		</s:Group>
	</s:Group>
</s:Application>